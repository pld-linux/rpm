--- rpm-4.4.1/configure.ac.orig	2005-07-15 20:06:31.000000000 +0000
+++ rpm-4.4.1/configure.ac	2005-07-15 20:22:45.000000000 +0000
@@ -619,7 +619,6 @@
 dnl popt w float/double needs.
 AC_CHECK_HEADERS(float.h)
 
-AC_CHECK_HEADERS(glob.h)
 
 dnl statfs portability fiddles.
 dnl
@@ -843,10 +842,10 @@
 dnl XXX Glob is "fixed" in glibc-2.3.3-61, but the cost is that
 dnl dangling symlinks are no longer globbed. Always use the internal glob.
 dnl
-#AC_ARG_WITH(glob, [  --with-glob             use the internal GNU glob ],
-#    [rpm_cv_glob=yes],
-#    [AC_CHECK_FUNCS(glob, rpm_cv_glob=no, rpm_cv_glob=yes)])
-#
+AC_ARG_WITH(glob, [  --with-glob             use the internal GNU glob ],
+    [rpm_cv_glob=yes],
+    [AC_CHECK_FUNCS(glob, rpm_cv_glob=no, rpm_cv_glob=yes)])
+
 #if test $rpm_cv_glob = no ; then
 #    AC_CACHE_CHECK([for GNU extensions to glob], rpm_cv_glob_ext, [
 #    rm -f t
@@ -870,11 +869,11 @@
 #    fi
 #fi
 #
-#if test "$rpm_cv_glob" = yes; then
+if test "$rpm_cv_glob" = yes; then
     AC_DEFINE(USE_GNU_GLOB, 1, [Use the included glob.c?])
     AC_LIBOBJ(glob)
     AC_LIBOBJ(fnmatch)
-#fi
+fi
 dnl
 dnl Auto-detect which python bindings should be built.
 dnl
--- rpm-4.4.1/misc/glob.c.orig	2005-01-28 06:19:54.000000000 +0000
+++ rpm-4.4.1/misc/glob.c	2005-07-15 20:35:31.000000000 +0000
@@ -130,7 +130,7 @@
    If memory cannot be allocated for PGLOB, GLOB_NOSPACE is returned.
    Otherwise, `glob' returns zero.  */
 int
-glob (const char *pattern, int flags,
+rpm_glob (const char *pattern, int flags,
 	int (*errfunc) __P ((const char *, int)), glob_t *pglob)
 {
   const char *filename;
@@ -831,7 +831,7 @@
 
 /* Free storage allocated in PGLOB by a previous `glob' call.  */
 void
-globfree (glob_t *pglob)
+rpm_globfree (glob_t *pglob)
 {
   if (pglob->gl_pathv != NULL)
     {
