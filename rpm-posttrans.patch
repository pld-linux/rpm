20:35 < jbj> and this fixes the debugging lableing i believe (untested):
Index: psm.c
===================================================================
RCS file: /cvs/devel/rpm/lib/psm.c,v
retrieving revision 2.192.2.4
diff -u -b -B -w -p -r2.192.2.4 psm.c
--- ./lib/psm.c       13 Jul 2005 11:15:16 -0000      2.192.2.4
+++ ./lib/psm.c	2005-08-15 21:24:41.000000000 +0300
@@ -461,6 +461,8 @@
     case RPMTAG_PREUN:		return "%preun";
     case RPMTAG_POSTUN:		return "%postun";
     case RPMTAG_VERIFYSCRIPT:	return "%verify";
+    case RPMTAG_PRETRANS:	return "%pretrans";
+    case RPMTAG_POSTTRANS:	return "%posttrans";
     }
     return "%unknownscript";
 }
Index: transaction.c
===================================================================
RCS file: /cvs/devel/rpm/lib/transaction.c,v
retrieving revision 1.315.2.3
diff -u -b -B -w -p -r1.315.2.3 transaction.c
--- ./lib/transaction.c       2 Jul 2005 18:53:12 -0000       1.315.2.3
+++ ./lib/transaction.c	2005-08-15 21:28:15.000000000 +0300
@@ -1616,6 +1616,7 @@
 		psm = rpmpsmNew(ts, p, p->fi);
 /*@=compdef =usereleased@*/
 assert(psm != NULL);
+		psm->stepName = "pretrans";
 		psm->scriptTag = RPMTAG_PRETRANS;
 		psm->progTag = RPMTAG_PRETRANSPROG;
 		xx = rpmpsmStage(psm, PSM_SCRIPT);
@@ -2321,6 +2321,7 @@
 	    psm = rpmpsmNew(ts, p, p->fi);
 /*@=compdef =usereleased@*/
 assert(psm != NULL);
+	    psm->stepName = "posttrans";
 	    psm->scriptTag = RPMTAG_POSTTRANS;
 	    psm->progTag = RPMTAG_POSTTRANSPROG;
 	    xx = rpmpsmStage(psm, PSM_SCRIPT);
20:40 < jbj> glen: now tested, fixes.
