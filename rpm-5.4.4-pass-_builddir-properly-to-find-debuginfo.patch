macros.rpmbuild fixed with rpm-fix-___build_pre-macro.patch

#--- rpm-5.4.4/macros/macros.rpmbuild.in.builddir~	2011-12-20 15:36:20.813852241 +0100
#+++ rpm-5.4.4/macros/macros.rpmbuild.in	2011-12-20 15:37:43.385806877 +0100
#@@ -326,8 +326,9 @@ echo "Patch #%{__patch_number} (%{basena
# %___build_args		-e
# %___build_cmd		%{?_sudo:%{_sudo} }%{?_remsh:%{_remsh} %{_remhost} }%{?_remsudo:%{_remsudo} }%{?_remchroot:%{_remchroot} %{_remroot} }%{___build_shell} %{___build_args}
# %___build_pre	\
#+  RPM_BUILD_DIR=\"%{u2p:%{_builddir}}\"\
#   RPM_OPT_FLAGS=\"%{optflags}\"\
#-  export RPM_OPT_FLAGS\
#+  export RPM_BUILD_DIR RPM_OPT_FLAGS\
#   %{?buildroot:RPM_BUILD_ROOT=\"%{u2p:%{buildroot}}\"\
#   export RPM_BUILD_ROOT}\
#   %{?_javaclasspath:CLASSPATH=\"%{_javaclasspath}\"\
--- rpm-5.4.16/scripts/find-debuginfo.sh~	2016-03-16 17:17:59.000000000 +0200
+++ rpm-5.4.16/scripts/find-debuginfo.sh	2016-03-16 17:18:58.327652453 +0200
@@ -28,7 +28,6 @@
 # Barf on missing build IDs.
 strict=false
 
-RPM_BUILD_DIR="$(pwd)"
 # canon RPM_BUILD_DIR, the DW_AT_comp_dir in ELF objects is real a real path
 # and debugedit will ignore them as they are out of build dir.
 RPM_BUILD_DIR=$(readlink -f "$RPM_BUILD_DIR")
